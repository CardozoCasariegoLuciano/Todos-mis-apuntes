--- Para logearse

<?php

	try{

		$conexion = new PDO ("mysql:host=localhost; dbname=cursophp_pildorayt","root",""); // establesco la conexion

		$conexion->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION); // permito la creacion del objeto exception

		$conexion-> exec("SET CHARACTER SET utf8"); // indico el juego de caracteres

		$sql = "SELECT * FROM usuarios WHERE usuario = :usr AND password = :pass"; // consulta SQL con dos marcadores

		$resultado = $conexion->prepare($sql); // Preparo la consulta

			$user = htmlentities(addslashes($_POST["user"])); // en resumen, esta linea evita la inyeccion SQL (pero tambien sirve para otras cosas)

			$password = htmlentities(addslashes($_POST["pass"])); // en resumen, esta linea evita la inyeccion SQL (pero tambien sirve para otras cosas)

		$resultado->bindValue(":usr", $user); //  Vincula un valor a un parámetro en este caso una etiqueta con el valor pasado por el usuario de las 2 filas anteriores

		$resultado->bindValue("pass", $password); // Vincula un valor a un parámetro en este caso una etiqueta con el valor pasado por el usuario de las 2 filas anteriores

		$resultado->execute(); // Ejecuta la consulta


		$cant_registros = $resultado->rowCount(); // $resultado->rowCount(): retorna la cantidad de filas que retorna una colsulta

		if ($cant_registros != 0) {

			session_start();  // crea o reanuda una sesion para el usuario 

			$_SESSION["Usuario"] = $_POST["user"]; // Creo una variable super global llamada "Usuario"(puede ser cualquier nombre) y le asigno el valor que me pasaron por el formulario de la pagina principal

			header("location:Pagina-para-usuarios1.php"); // redirecciona a la pagina indicada

		}else {

			header("location:pagina-de-Inicio.php");  // redirecciona a la pagina indicada
		}

	}catch(Exception $e){

		die("Error en: " . $e->getLine());
	}
?>


---- Para registrarse

<?php
	try{

		$conexion = new PDO ("mysql:host=localhost; dbname=cursophp_pildorayt","root","");

		$conexion->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);

		$sql = "INSERT INTO usuarios (usuario, password) VALUES (:user,:pass)";

		$resultado = $conexion->prepare($sql);

		$usuario = htmlentities(addslashes($_POST["user"]));
		$password= htmlentities(addslashes($_POST["pass"]));

		if ($usuario!= NULL && $password!= NULL) {		

			$resultado->bindValue(":user",$usuario);
			$resultado->bindValue(":pass", $password);

			$resultado->execute();

			$cant = $resultado->rowCount();

			if ($cant != 0) {

				echo "Nuevo usuario agregado";
			
			}else{

				echo "NO se pudo agregar al nuevo  usuario";

			}
		}else{
			echo "Ingrese datos validos";
		}

	}catch(Execption $e){
		die("Error, Todo mal: " . $e->getLine());
	}
?>



---- La pagina a la redireccionara al usuaria si se logeo correctamente

<!DOCTYPE html>
<html>
 <head>
	<title>Solo usuarios</title>
 </head>
 <body>
	<?php

		session_start();  // reanudo la secion qye ya abri a la hora de verificar el login

		if (!isset($_SESSION["Usuario"])) {  // isset: Determina si una variable está definida y no es NULL. Osea que si el usuario no existe entra en el If
			
			header("location:pagina-de-Inicio.php");	// redirecciona	

		}
	?>


	<h4 style="text-align: center;">Holis</h4>

	<?php
	echo "Bienvenido " . $_SESSION["Usuario"] . "<br>";  // imprimo el nombre del usuario
	?>

	<p> Todo el contenido de la pagina </p>

 </body>
</html>


---- Como cerrar una sesion

<?php

session_start();  // Antes de cerrar una Sesion primero hay que abrirla para que el navegador sepa exactamente cual cerrar

session_destroy(); // destruye la sesion para que cuando el usuario quiera salir, no quede la sesion abierta para que entre otra persona

header("location:pagina-de-Inicio.php"); // Redirecciona

?>




















