Protocolo UDP 

(No orientado a la conexion), CLNS

*Se usa cuando el intercambio de mensajes es escaso(ej: un DNS)
*La aplicacion es a timepo real y no puede esperar confirmaciones (ej videollamadas)
*El medio es altamente fiable y sin congestion (el: LAN)

Los paquetes de UDP se denominan mensajes o datagramas


La cabecera UDP
---------------

tiene 32 bits de largo (No espesifica el alto)
Tiene una PseudoCabecera en la que se indican:

	IP de origen
	Ip de destino
	Longitud del Datagrama 
	y un codigo que indica que es UDP (el codigo es 10001 en binario o 17 en decimal)
	
	La pseudCabecera se añade al principio solo para  el calculo del Checksum, (No se envia) permite comprobar que las IP no se han equivocado
	
Y una cabecera en la que se indican:

	Puerto origen
	Puerto Destino
	Longitud del datagrama
	y un Checksum
	
	
Multiplexacion:
---------------

*Se realizan mediante puertos, que pueden valer de 0 a 65535
*Los puertos 0 al 1023 estan reservados para servidores "bien conocidos"
* un socket es la combinacion entre una IP y un puerto



Protocolo TCP
==============

* Orientado a la conexion
* Transposte fiable

Los paquetes de TCP se denominan segmentos


Los servicios orientados a la conexion:
*requieren un procedimiento explicito para estableser y terminar la comunicacion
*Mantienen en memoria informacion relativa a dicha conexion. Ej espacio en buffers, contadores de bytes, etc (Informacion de estado)


Funciones de TCP:

*Multiplexa el nivel de aplicacion
*Controlar errores, retransmitiendo segmentos perdidos o erroneos.
*Eliminar duplicados
*Gestionar el intercambio de datos con las aplicaciones

Cabesera TCP
============

Tiene 32 bits de largo y 20 bytes de alto
	
	la pseudCabecera contiene:
		IP de origen
		Ip de destino
		Longitud del Segmento 
		y un codigo que indica que es TCP (el codigo es 110 en binario o 6 en decimal)
		
		La pseudCabecera se añade al principio solo para  el calculo del Checksum, (No se envia) permite comprobar que las IP no se han equivocado
	
	la cabecera Contiene:
	
		Puerto Origen
		Puerto Destino
		Numero de secuencia
		Numero de acuse de recibo
		Tamaño de ventana
		checksum
		Puntero datos ugrentes
		Opciones
		Relleno
		Flags(8bits)
		
			Los flags pueden ser:
			
				CWE: Congestion Window Reduced
				ECE: ECN Echo (ECN=Explicit Congestion Notification) 
				URG: El segmento contiene datos urgentes
				ACK: el campo número de acuse de recibo tiene sentido
				PSH: el segmento contiene datos ‘Pushed’
				RST: ha habido algún error y la conexión debe cerrarse
				SYN: indica el inicio de una conexión
				FIN:  indica el final de una conexión


	Conexion por "Saludo a tres vias"
	---------------------------------
	
	Se utiliza para evitar segmentos duplicados
	El "saludo a tres vias se" basa en la eleccion  de un numero que identifica de forma unica cada intento de conexion y que actua como PIN
	
	1) El cliente elige un numero unico para cada intento de conexion (Lo incluye en la peticion de conexion)
	2)El servidor,cuando recibe la peticion, elige otro numero unico y envia una respuesta al cliente
	3)El cliente al recibir la respuesta considera establecida la conexion, a continuacion envia un tercer mensaje en el que acusa recibo  del mensaje anterior(con este 3er mensaje el servidor tambien 			da por establecida la conexion)
	
	
	El numero unico (Numero de secuencia) es un numero aleatorio denominado ISN (Initian Sequence Number)
	
	Los flags SYN y FIN, cuando estan puestos, incrementan  en 1 el numero de secuencia.
		Esto permite que se pueda acusar recibo de un segmento SYN y FIN sin ambiguedad
	ACK NO INCREMENTA el num.de secuencia
	
	
	
	Desconexion
	-----------
	
	Simetrica: Uno manda un mensaje avisando que cerro para que el otro host haga lo mismo
		
				Usa la "deconexion a tres vias" similar a a la conexion analoga
	
	Asimetrica: un Host termina la conexion en ambos sentidos sin esperar confirmacion
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	







